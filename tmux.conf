# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST

# set PATH for run and run-shell commands
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin:/opt/homebrew/bin"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# enable mouse mode
set -g mouse on

# reduce time tmux waits after escape is input to determine it it's part
# of function or meta key sequence
set -g escape-time 50

# use vi mode
setw -g mode-keys vi

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# reload config shortcut
bind-key r source-file ~/.tmux.conf\; display-message "Config reloaded"

# styling
color_status_fg="colour15"
color_status_bg="colour12"
off_color_status_fg="colour245"
off_color_status_bg="colour238"

set -g status-justify left
set -g status-fg $color_status_fg
set -g status-bg $color_status_bg
set -g status-interval 2
set -g status-left-length 30

# tmux yank
#
# copy or mouse mode
#   y - copy selected text to system clipboard
if-shell '[ -d ~/.tmux-plugins/tmux-yank ]' \
  'run-shell ~/.tmux-plugins/tmux-yank/yank.tmux'

# nested and remote sessions
#
# C-Space in switches between `root` and `off` key tables,
# with `off` key table enabled, nested session is effectively in control

if-shell 'test -n "$SSH_CLIENT"' \
  'source-file ~/.tmux/tmux.remote.conf'

bind -T root C-Space \
  set prefix None \;\
  set key-table off \;\
  set status-left-style "fg=$off_color_status_fg,bg=$off_color_status_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off C-Space \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-left-style \;\
  refresh-client -S
